pipeline
{
agent any
stages
{
    stage ('copy code from github')
    {
        steps {git branch: 'master', url: 'https://github.com/Devopstech321/hello-world.git'}
    }
    stage ('creating artifacts')
    {
        steps {withMaven(jdk: 'JAVA-HOME', maven: 'Maven_Home') {
    sh 'mvn clean package'
    }}
    }
    stage ('copy artifact to ansible server')
    {
        steps { sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible-master', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '//etc//ansible//playbooks', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '**/target/webapp.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)]) }
    }
    stage ('run ansible playbook to execute tomcat and artifact')
    {
        steps {sshPublisher(publishers: [sshPublisherDesc(configName: 'ansible-master', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'ansible-playbook deploy_ansible.yaml', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '//etc//ansible//playbooks', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'deploy_ansible.yaml')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)]) }
    }
}
}
